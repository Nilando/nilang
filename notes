VERSION 0.1.0

BACKLOG:
1. Memory SSA
2. Jump threading pass
3. Loop Invariant Code Motion (Maybe)
4. String Interpolation
5. For loops on strings, lists, and maps
6. importing and exporting

GOALS
- complete AOC 2025 with this language
- learn about compilers and interpreters
- have fun

DECEMBER -> COMPLETE AOC
NOVEMBER
OCTOBER
AUGUST
JULY
JUNE

MAY
- dead code elimination
- global value numbering pass 
- register allocation
- first draft of bytecode
- TAC Updates: 
  - Var -> VReg (much smaller!)

APRIL
- implemented CFG creation from TAC
- implemented converting CFG to SSA form
- added boolean shortcircuiting
- symbol map can convert 2 ways
- completed escape DFA
- CFG printing and graph vizualization

MARCH
- refactored the lexer to be much more functional
- completely redesigned the parser by using parser combinators
  - this gave a huge improvement in readability
- started redesign of the TAC generator
