VERSION 0.1.0

BUGS:
- only allow one of each sym in func input

SPIKES:
- remove unreachable blocks from cfg
  - requires refactor to cfg
- build graph vizualization
  - cfg printer needs to be refactored
- remove String from TacConst ?? this is unclear
  - might need to separate logic of const string an mutable string

BACKLOG:
0. Build Dom Tree -- DONE (needs tests)
1. Escape Analysis -- DONE (needs tests)
2. Memory SSA -- in progress
3. GVN pass
4. DCE pass
5. Jump threading pass
6. Loop Invariant Code Motion (Maybe)
7. register allocation over SSA => HUGE MILESTONE !!! CELEBRATE !!!
8. String Interpolation
9. For loops on strings, lists, and maps
10. importing and exporting

GOALS
- complete AOC 2025 with this language
- functions are first class citizens
- function closures
- global variables
- display syntax and runtime errors nicely
- simple read & print io
- repl
- concurrent garbage collection
- debugger
- export and import files

NON GOALS 
- async and await
- LSP
- dependency manager
- static analysis
- interop with rust

DECEMBER -> COMPLETE AOC
NOVEMBER
OCTOBER
AUGUST
JULY
JUNE
MAY -> be done with register allocation

APRIL
- implemented CFG creation from TAC
- implemented converting CFG to SSA form
- added boolean shortcircuiting
- symbol map can convert 2 ways
- completed escape DFA
- CFG printing and graph vizualization

MARCH
- refactored the lexer to be much more functional
- completely redesigned the parser by using parser combinators
  - this gave a huge improvement in readability
- started redesign of the TAC generator
