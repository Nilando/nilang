========= FILE ./src/runtime/tests/fixtures/inserting_and_deleting_on_map/inserting_and_deleting_on_map.ast.actual ========
[
    Assign {
        dest: Spanned {
            item: Local(
                17,
            ),
            span: Span {
                start: 0,
                end: 3,
            },
        },
        src: Spanned {
            item: Value(
                Map(
                    [],
                ),
            ),
            span: Span {
                start: 4,
                end: 7,
            },
        },
    },
    Assign {
        dest: Spanned {
            item: Local(
                18,
            ),
            span: Span {
                start: 9,
                end: 12,
            },
        },
        src: Spanned {
            item: Value(
                Int(
                    0,
                ),
            ),
            span: Span {
                start: 13,
                end: 15,
            },
        },
    },
    While {
        cond: Spanned {
            item: Binop {
                lhs: Spanned {
                    item: Value(
                        Ident(
                            18,
                        ),
                    ),
                    span: Span {
                        start: 22,
                        end: 23,
                    },
                },
                op: Lt,
                rhs: Spanned {
                    item: Value(
                        Int(
                            1000,
                        ),
                    ),
                    span: Span {
                        start: 26,
                        end: 32,
                    },
                },
            },
            span: Span {
                start: 22,
                end: 32,
            },
        },
        stmts: [
            Assign {
                dest: Spanned {
                    item: Index {
                        store: Spanned {
                            item: Value(
                                Ident(
                                    17,
                                ),
                            ),
                            span: Span {
                                start: 35,
                                end: 36,
                            },
                        },
                        key: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 37,
                                end: 39,
                            },
                        },
                    },
                    span: Span {
                        start: 35,
                        end: 41,
                    },
                },
                src: Spanned {
                    item: Value(
                        Ident(
                            18,
                        ),
                    ),
                    span: Span {
                        start: 42,
                        end: 44,
                    },
                },
            },
            Assign {
                dest: Spanned {
                    item: Local(
                        18,
                    ),
                    span: Span {
                        start: 48,
                        end: 51,
                    },
                },
                src: Spanned {
                    item: Binop {
                        lhs: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 52,
                                end: 53,
                            },
                        },
                        op: Plus,
                        rhs: Spanned {
                            item: Value(
                                Int(
                                    1,
                                ),
                            ),
                            span: Span {
                                start: 56,
                                end: 58,
                            },
                        },
                    },
                    span: Span {
                        start: 52,
                        end: 58,
                    },
                },
            },
        ],
    },
    Assign {
        dest: Spanned {
            item: Local(
                18,
            ),
            span: Span {
                start: 62,
                end: 65,
            },
        },
        src: Spanned {
            item: Value(
                Int(
                    0,
                ),
            ),
            span: Span {
                start: 66,
                end: 68,
            },
        },
    },
    While {
        cond: Spanned {
            item: Binop {
                lhs: Spanned {
                    item: Value(
                        Ident(
                            18,
                        ),
                    ),
                    span: Span {
                        start: 75,
                        end: 76,
                    },
                },
                op: Lt,
                rhs: Spanned {
                    item: Value(
                        Int(
                            1000,
                        ),
                    ),
                    span: Span {
                        start: 79,
                        end: 85,
                    },
                },
            },
            span: Span {
                start: 75,
                end: 85,
            },
        },
        stmts: [
            Expr(
                Spanned {
                    item: Delete {
                        store: Spanned {
                            item: Value(
                                Ident(
                                    17,
                                ),
                            ),
                            span: Span {
                                start: 95,
                                end: 97,
                            },
                        },
                        key: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 98,
                                end: 100,
                            },
                        },
                    },
                    span: Span {
                        start: 88,
                        end: 101,
                    },
                },
            ),
            Assign {
                dest: Spanned {
                    item: Index {
                        store: Spanned {
                            item: Value(
                                Ident(
                                    17,
                                ),
                            ),
                            span: Span {
                                start: 105,
                                end: 106,
                            },
                        },
                        key: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 107,
                                end: 109,
                            },
                        },
                    },
                    span: Span {
                        start: 105,
                        end: 111,
                    },
                },
                src: Spanned {
                    item: Value(
                        String(
                            SegmentedString {
                                segments: [
                                    String(
                                        "DELETED",
                                    ),
                                ],
                            },
                        ),
                    ),
                    span: Span {
                        start: 112,
                        end: 122,
                    },
                },
            },
            Assign {
                dest: Spanned {
                    item: Local(
                        18,
                    ),
                    span: Span {
                        start: 126,
                        end: 129,
                    },
                },
                src: Spanned {
                    item: Binop {
                        lhs: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 130,
                                end: 131,
                            },
                        },
                        op: Plus,
                        rhs: Spanned {
                            item: Value(
                                Int(
                                    2,
                                ),
                            ),
                            span: Span {
                                start: 134,
                                end: 136,
                            },
                        },
                    },
                    span: Span {
                        start: 130,
                        end: 136,
                    },
                },
            },
        ],
    },
    Assign {
        dest: Spanned {
            item: Local(
                18,
            ),
            span: Span {
                start: 140,
                end: 143,
            },
        },
        src: Spanned {
            item: Value(
                Int(
                    0,
                ),
            ),
            span: Span {
                start: 144,
                end: 146,
            },
        },
    },
    While {
        cond: Spanned {
            item: Binop {
                lhs: Spanned {
                    item: Value(
                        Ident(
                            18,
                        ),
                    ),
                    span: Span {
                        start: 153,
                        end: 154,
                    },
                },
                op: Lt,
                rhs: Spanned {
                    item: Value(
                        Int(
                            1000,
                        ),
                    ),
                    span: Span {
                        start: 157,
                        end: 163,
                    },
                },
            },
            span: Span {
                start: 153,
                end: 163,
            },
        },
        stmts: [
            Expr(
                Spanned {
                    item: Print(
                        Spanned {
                            item: Index {
                                store: Spanned {
                                    item: Value(
                                        Ident(
                                            17,
                                        ),
                                    ),
                                    span: Span {
                                        start: 172,
                                        end: 173,
                                    },
                                },
                                key: Spanned {
                                    item: Value(
                                        Ident(
                                            18,
                                        ),
                                    ),
                                    span: Span {
                                        start: 174,
                                        end: 176,
                                    },
                                },
                            },
                            span: Span {
                                start: 172,
                                end: 177,
                            },
                        },
                    ),
                    span: Span {
                        start: 166,
                        end: 178,
                    },
                },
            ),
            Assign {
                dest: Spanned {
                    item: Local(
                        18,
                    ),
                    span: Span {
                        start: 182,
                        end: 185,
                    },
                },
                src: Spanned {
                    item: Binop {
                        lhs: Spanned {
                            item: Value(
                                Ident(
                                    18,
                                ),
                            ),
                            span: Span {
                                start: 186,
                                end: 187,
                            },
                        },
                        op: Plus,
                        rhs: Spanned {
                            item: Value(
                                Int(
                                    1,
                                ),
                            ),
                            span: Span {
                                start: 190,
                                end: 192,
                            },
                        },
                    },
                    span: Span {
                        start: 186,
                        end: 192,
                    },
                },
            },
        ],
    },
]