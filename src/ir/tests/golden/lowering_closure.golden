fn new_counter() {
  count = { val: 0 };

  return fn() {
    count.val = count.val + 1;

    return count.val;
  };
}

my_counter = new_counter();

print(my_counter()); // 1
print(my_counter()); // 2
print(my_counter()); // 3

%%%%

fn2 () {
block0:
  LOAD_UPVAL count_0, #count
  t1 = #val
  t2 = count_0[t1]
  t3 = 1
  t4 = t2 + t3
  LOAD_UPVAL count_1, #count
  t5 = #val
  count_1[t5] = t4
  LOAD_UPVAL count_2, #count
  t6 = #val
  t7 = count_2[t6]
  return t7

}
fn1 () {
block0:
  t0 = new_map
  t1 = #val
  t2 = 0
  t0[t1] = t2
  count_0 = t0
  t4 = fn(2)
  STORE_UPVAL t4, count_0
  return t4

}
MAIN () {
block0:
  new_counter_0 = fn(1)
  my_counter_0 = call new_counter_0
  t3 = call my_counter_0
  print t3
  t5 = call my_counter_0
  print t5
  t7 = call my_counter_0
  print t7

}